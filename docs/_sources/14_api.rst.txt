########
DHTK API
########

Core Functions
==============

dhtk.start()
------------
Main DHTK initiation function, which functions as a wrapper around the Settings class.
It filters the most relevant arguments and passes them to Settings to set up DHTK.

.. autofunction:: dhtk.core.__init__.start

.. seealso:: `Usage <12_guide.html#setting-up-configurations>`_ and `Settings class <141_core.html#settings>`_
dhtk.get_module()
-----------------

**3 a) Connect to a** `SPARQL <https://en.wikipedia.org/wiki/SPARQL>`_ **endpoint**

If you're using a remote SPARQL endpoint, you can provide it as a URL (website)
using the *endpoint* setting. After DHTK is set up, this step is simply connects to the
SPARQL endpoint to use. As such, it is integrated with the next step for moist user cases.
However, note that this step performs important checks to ensure DHTK is properly set up.

**3 b) Load the required DHTK extension**


Note that the *dataset* setting, defining the DHTK extension module to use, must be defined for the first time,
otherwise DHTK is not aware of which module to load!

Once the module is loaded, DHTK functionalities are ready to use!

.. autofunction:: dhtk.core.__init__.get_module


.. toctree::
   :hidden:
   :maxdepth: 3

   Core API <141_core>
   Extensions API <142_ext>
   Processing API <143_proc>