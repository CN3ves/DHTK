########################
Extension API references
########################

AbstractExtension
-----------------

The AbstractExtension class is the main point of integration of the various extensions
into DHTK. It provides a template that lays out a simple and unified interface for querying
SPARQL endpoints by wrapping most common options withing one single function.

.. autoclass:: dhtk.extensions.blueprint.AbstractExtension
   :members:
   :private-members:

.. seealso:: `Integrating new modules into DHTK <13_devs.html#integrating-new-modules>`_

Gutenberg extension
-------------------

Gutenberg abstract classes
--------------------------
.. autoclass:: dhtk.extensions.gutenberg.objects.abstract_text.Author
   :members:
   :private-members:

.. autoclass:: dhtk.extensions.gutenberg.objects.abstract_text.Book
   :members:
   :private-members:

Gutenberg implementation
------------------------
.. include:: ./extensions/gutenberg

import dhtk
gutenberg = dhtk.get_module(dhtk.start(dataset="gutenberg"))
gutenberg.get(what="author", name="James Joyce", add = True)
print(gutenberg.corpus(name="JJb", description ="James Joyce's books"))
gutenberg.save()
